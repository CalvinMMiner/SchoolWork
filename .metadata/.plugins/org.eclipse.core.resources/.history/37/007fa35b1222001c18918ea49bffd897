import java.util.Random;
import java.text.DecimalFormat;
//This class uses Node and its descendants to perform some basic algebra with variables
public class TestAlgebra 
{
	static Random r = new Random();//used to randomize the classes and constants

	//the main method uses the methods randOperator and randOperatorAndConstents to generate the Algebra expressions
	public static void main(String[] args) 
	{
		double[] data1 = {1,2,3};
		double[] data2 = {4,5,6};
		Node n = (Node) randOperator();
		DecimalFormat numberFormat = new DecimalFormat("#0.0");
		
		System.out.println(n+" = "+ numberFormat.format(n.eval(data1)));
		System.out.println(n+" = "+ numberFormat.format(n.eval(data2)));

		

	}
	
	//Determines which operation is in the middle
	private static Node randOperator()
	{
		switch(r.nextInt(4))
		{
			case 0: Plus  p = new Plus  (randOperatorAndConstents(),randOperatorAndConstents()); return p;
			case 1: Minus m = new Minus (randOperatorAndConstents(),randOperatorAndConstents()); return m;
			case 2: Mult  M = new Mult  (randOperatorAndConstents(),randOperatorAndConstents()); return M;
			case 3:Divide d = new Divide(randOperatorAndConstents(),randOperatorAndConstents()); return d;
		}
				
		return null;
	}
		
	//Determines which operations happen on the sides and what the numbers involved are
	private static Node randOperatorAndConstents()
	{
		switch(r.nextInt(4))
		{
			case 0: Plus  p = new Plus  (ConstentsOrVariables(), ConstentsOrVariables()); return p;
			case 1: Minus m = new Minus (ConstentsOrVariables(), ConstentsOrVariables()); return m;
			case 2: Mult  M = new Mult  (ConstentsOrVariables(), ConstentsOrVariables()); return M;
			case 3:Divide d = new Divide(ConstentsOrVariables(), ConstentsOrVariables()); return d;
		}
				
		return null;
	}
	
	//Determines which operations happen on the sides and what the numbers involved are
		private static Node ConstentsOrVariables()
		{
			switch(r.nextInt(2))
			{
				case 0: Const c    = new Const(r.nextInt(20)+1); return c;
				case 1: Variable v = new Variable();             return v;
			}
					
			return null;
		}
}


import java.util.Random;
public class TestArithmetic 
{
	static Random r = new Random();


	public static void main(String[] args) 
	{
		Node a;
		switch(r.nextInt(16))
		{
			case 0: a = new Plus(new Plus(		new Const(r.nextInt(20)+1),	new Const(r.nextInt(20)+1)),	new Plus(new Const(r.nextInt(20)+1), 	new Const(r.nextInt(20)+1)));break;
			case 1: a = new Plus(new Plus(		new Const(r.nextInt(20)+1),	new Const(r.nextInt(20)+1)),	new Minus(new Const(r.nextInt(20)+1), 	new Const(r.nextInt(20)+1)));break;
			case 2: a = new Plus(new Plus(		new Const(r.nextInt(20)+1),	new Const(r.nextInt(20)+1)),	new Mult(new Const(r.nextInt(20)+1), 	new Const(r.nextInt(20)+1)));break;
			case 3: a = new Plus(new Plus(		new Const(r.nextInt(20)+1),	new Const(r.nextInt(20)+1)),	new Divide(new Const(r.nextInt(20)+1), 	new Const(r.nextInt(20)+1)));break;
			case 4: a = new Plus(new Minus(		new Const(r.nextInt(20)+1),	new Const(r.nextInt(20)+1)),	new Plus(new Const(r.nextInt(20)+1), 	new Const(r.nextInt(20)+1)));break;
			case 5: a = new Plus(new Minus(		new Const(r.nextInt(20)+1),	new Const(r.nextInt(20)+1)),	new Minus(new Const(r.nextInt(20)+1),	new Const(r.nextInt(20)+1)));break;
			case 6: a = new Plus(new Minus(		new Const(r.nextInt(20)+1),	new Const(r.nextInt(20)+1)),	new Mult(new Const(r.nextInt(20)+1),	new Const(r.nextInt(20)+1)));break;
			case 7: a = new Plus(new Minus(		new Const(r.nextInt(20)+1),	new Const(r.nextInt(20)+1)),	new Divide(new Const(r.nextInt(20)+1),	new Const(r.nextInt(20)+1)));break;
			case 8: a = new Plus(new Mult(		new Const(r.nextInt(20)+1),	new Const(r.nextInt(20)+1)),	new Plus(new Const(r.nextInt(20)+1), 	new Const(r.nextInt(20)+1)));break;
			case 9: a = new Plus(new Mult(		new Const(r.nextInt(20)+1),	new Const(r.nextInt(20)+1)),	new Minus(new Const(r.nextInt(20)+1), 	new Const(r.nextInt(20)+1)));break;
			case 10:a = new Plus(new Mult(		new Const(r.nextInt(20)+1),	new Const(r.nextInt(20)+1)),	new Mult(new Const(r.nextInt(20)+1), 	new Const(r.nextInt(20)+1)));break;
			case 11:a = new Plus(new Mult(		new Const(r.nextInt(20)+1),	new Const(r.nextInt(20)+1)),	new Divide(new Const(r.nextInt(20)+1),	new Const(r.nextInt(20)+1)));break;
			case 12:a = new Plus(new Divide(	new Const(r.nextInt(20)+1), new Const(r.nextInt(20)+1)),	new Plus(new Const(r.nextInt(20)+1),	new Const(r.nextInt(20)+1)));break;
			case 13:a = new Plus(new Divide(	new Const(r.nextInt(20)+1), new Const(r.nextInt(20)+1)),	new Minus(new Const(r.nextInt(20)+1),	new Const(r.nextInt(20)+1)));break;
			case 14:a = new Plus(new Divide(	new Const(r.nextInt(20)+1), new Const(r.nextInt(20)+1)),	new Mult(new Const(r.nextInt(20)+1), 	new Const(r.nextInt(20)+1)));break;
			case 15:a = new Plus(new Divide(	new Const(r.nextInt(20)+1), new Const(r.nextInt(20)+1)),	new Divide(new Const(r.nextInt(20)+1), 	new Const(r.nextInt(20)+1)));break;
			
			default: a = new Plus(new Plus(new Const(r.nextInt(20)+1), new Const(r.nextInt(20)+1)),	new Minus(new Const(r.nextInt(20)+1), new Const(r.nextInt(20)+1)));
		}
		
		
		
		
				
		Node n = new Plus(randOperator(),new Const(r.nextInt(20)+1));
		
		System.out.println(n+" = "+ n.eval());

		System.out.println(a+" = "+ a.eval());
	}
	
	private static Node randOperator()
	{
		switch(r.nextInt(3))
		{
			case 0: Plus  p = new Plus(	new Const(r.nextInt(20)+1), new Const(r.nextInt(20)+1)); return p;
			case 1: Minus m = new Minus(new Const(r.nextInt(20)+1), new Const(r.nextInt(20)+1)); return m;
			case 2: Mult  M = new Mult(	new Const(r.nextInt(20)+1), new Const(r.nextInt(20)+1)); return M;
			case 3:Divide d =new Divide(new Const(r.nextInt(20)+1), new Const(r.nextInt(20)+1)); return d;
		}
		
		return null;
	}
}
